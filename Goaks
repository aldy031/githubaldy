def plus_minus(node):
    result = 0 
    
    def traverse(current_node):
        nonlocal result
        if current_node.data % 2 == 0:
            result += current_node.data
            
        else: # If odd, subtract the value
            result -= current_node.data
        for child in current_node.children:
            traverse(child)
    
    traverse(node)
    return result
        

def find_deepest_leaf(node):
    # Recursive function to find the depth
    
    def get_depth(current_node):
        if not current_node.children: # If a leaf node
            return 0
        return 1 + max(get_depth(child) for child in current_node.children)
    
    return get_depth(node)
